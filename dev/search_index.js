var documenterSearchIndex = {"docs":
[{"location":"getting_started/#Getting-Started","page":"Getting started","title":"Getting Started","text":"","category":"section"},{"location":"getting_started/#Contents","page":"Getting started","title":"Contents","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"  Pages = [\"getting_started.md\"]\n  Depth = 3","category":"page"},{"location":"getting_started/#Installation-and-usage","page":"Getting started","title":"Installation and usage","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Installation:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"] add MMCAcovid19","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Usage:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"using MMCAcovid19","category":"page"},{"location":"getting_started/#Model-data","page":"Getting started","title":"Model data","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"The execution of the model depends on the following input data:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Geographic and population data.\nEpidemic parameters.\nInitialization of the epidemics.\nContainment strategy.","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"For a good simulation, you need to find real data or appropriate estimates for all of them. We suppose all this information can be read from external sources, feeding the corresponding Julia variables. In what follows, we first initialize all the necessary data, sometimes using random values, to show the correct way to introduce them to our model, and finally we show how to run the model.","category":"page"},{"location":"getting_started/#Geographic-and-population-data","page":"Getting started","title":"Geographic and population data","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Here we create random geographic and population data just to show the list and structure of the data variables.","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"We set first the basic sizes of the system, the number of patches and the number of strata:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Number of strata\nG = 3\n\n# Number of patches\nM = 5\nnothing # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Now we generate a random population, i.e., the number of people at each strata and patch. We distribute a total population of one million people using a multinomial random number:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Random population\nusing Random\nusing Distributions\nRandom.seed!(666) # hide\n\ng_probs = [0.1, 0.6, 0.3]\nm_probs = [0.05, 0.10, 0.15, 0.30, 0.40]\nprobs = transpose(m_probs) .* g_probs\ntotal_population = 1000000\ndistrib = Multinomial(total_population, reshape(probs, (1, G * M))[1, :])\nnᵢᵍ = convert.(Float64, reshape(rand(distrib), (G, M)))\nnothing # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"using Printf # hide\nprintln(string(\"Total population: \", total_population)) # hide\nprintln(\"Matrix nᵢᵍ: \") # hide\nfor g in 1:G # hide\n  print(string(\"  \", g, \":\")) # hide\n  for i in 1:M # hide\n    @printf(\"%10.1f\", nᵢᵍ[g, i]) # hide\n  end # hide\n  println() # hide\nend # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Note that, for convenience, we have used Float64 instead of integers to hold the sizes of the population. Now, the matrix of probabilities of contacts between strata, with all rows summing to one:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Strata contacts\nC = [0.5980 0.3849 0.0171\n     0.2440 0.7210 0.0350\n     0.1919 0.5705 0.2376]\nnothing # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"For the generation of the random mobility matrix, we first create a random directed network between patches, add self-loops to each node to represent people for which work and residence patches coincide, assign random weights to all the edges, and normalize the output weights to represent the commuting probabilities. The result is a two-column matrix edgelist with the origins and destinations of each edge, and a vector R with the corresponding commuting probabilities:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Random mobility\nusing LightGraphs\n\n# network\nnetwork = erdos_renyi(M, 0.7, is_directed=true)\nfor i in 1:M\n  add_edge!(network, i, i)   # add self-loops\nend\n# list of edges\nL = ne(network)\nedgelist = zeros(Int64, L, 2)\nedgelist[:, 1] .= src.(edges(network))\nedgelist[:, 2] .= dst.(edges(network))\n# list of commuting probabilities\nRᵢⱼ = rand(L)\nsum_r = zeros(M)\nfor e in 1:L   # find output strengths\n  i = edgelist[e, 1]\n  sum_r[i] += Rᵢⱼ[e]\nend\nfor e in 1:L   # normalize weights\n  i = edgelist[e, 1]\n  Rᵢⱼ[e] /= sum_r[i]\nend\n\nprintln(\"Mobility matrix R:\") # hide\nfor e in 1:L # hide\n  @printf(\"  %d -> %d : %.6f\\n\", edgelist[e, 1], edgelist[e, 2], Rᵢⱼ[e]) # hide\nend # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Finally, the rest of the variables related to population:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Average number of contacts per strata\nkᵍ = [11.8, 13.3, 6.6]\n\n# Average number of contacts at home per strata\nkᵍ_h = [3.15, 3.17, 3.28]\n\n# Average number of contacts at work per strata\nkᵍ_w = [1.72, 5.18, 0.0]\n\n# Degree of mobility per strata\npᵍ = [0.0, 1.0, 0.05]\n\n# Patch surfaces (in km²)\nsᵢ = [10.6, 23.0, 26.6, 5.7, 61.6]\n\n# Density factor\nξ = 0.01\n\n# Average household size\nσ = 2.5\nnothing # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Now, we are in condition to create the data structure to hold all the parameters related with the geographic area and its population:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"population = Population_Params(G, M, nᵢᵍ, kᵍ, kᵍ_h, kᵍ_w, C, pᵍ, edgelist, Rᵢⱼ, sᵢ, ξ, σ)","category":"page"},{"location":"getting_started/#Epidemic-parameters","page":"Getting started","title":"Epidemic parameters","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"The epidemic parameters control the probabilities of transition between the different compartments, and are summarized in the model diagram:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"(Image: Model)","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Thus, we must set them all according to the reported values in the scientific literature. Here we set the values in reference [1] of References:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Infectivity of infected\nβᴵ = 0.075\n\n# Infectivity of asymptomatic\nβᴬ = 0.5 * βᴵ\n\n# Exposed rate\nηᵍ = [1/2.444, 1/2.444, 1/2.444]\n\n# Asymptomatic infectious rate\nαᵍ = [1/5.671, 1/2.756, 1/2.756]\n\n# Infectious rate\nμᵍ = [1/1.0, 1/3.915, 1/3.915]\n\n# Direct death probability\nθᵍ = [0.0, 0.008, 0.047]\n\n# ICU probability\nγᵍ = [0.0003, 0.003, 0.026]\n\n# Pre-deceased rate\nζᵍ = [1/7.084, 1/7.084, 1/7.084]\n\n# Pre-hospitalized in ICU rate\nλᵍ = [1/4.084, 1/4.084, 1/4.084]\n\n# Fatality probability in ICU\nωᵍ = [0.3, 0.3, 0.3]\n\n# Death rate in iCU\nψᵍ = [1/7.0, 1/7.0, 1/7.0]\n\n# ICU discharge rate\nχᵍ = [1/20.0, 1/20.0, 1/20.0]\nnothing # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Additionally, we must set the number of timesteps (equivalent to days) to run the model equations:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Number of timesteps\nT = 200\nnothing # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"With them, we create the corresponding data structure:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Epidemic parameters\nepi_params = Epidemic_Params(βᴵ, βᴬ, ηᵍ, αᵍ, μᵍ, θᵍ, γᵍ, ζᵍ, λᵍ, ωᵍ, ψᵍ, χᵍ, G, M, T)","category":"page"},{"location":"getting_started/#Initialization-of-the-epidemics","page":"Getting started","title":"Initialization of the epidemics","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"The initialization of the epidemic spreading is performed by introducing the initial number of infected individuals (exposed, asymptomatic and symptomatic) at each patch and strata.","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Initial number of exposed individuals\nE₀ = zeros(G, M)\n\n# Initial number of infectious asymptomatic individuals\nA₀ = zeros(G, M)\nA₀[2, 5] = 2.0\nA₀[3, 3] = 1.0\n\n# Initial number of infectious symptomatic individuals\nI₀ = zeros(G, M)\nI₀[2, 5] = 1.0\n\nprintln(\"Initial number of exposed E₀:\") # hide\nfor g in 1:G # hide\n  print(string(\"  \", g, \":\")) # hide\n  for i in 1:M # hide\n    @printf(\"%5.1f\", E₀[g, i]) # hide\n  end # hide\n  println() # hide\nend # hide\n\nprintln(\"Initial number of infectious asymptomatic A₀:\") # hide\nfor g in 1:G # hide\n  print(string(\"  \", g, \":\")) # hide\n  for i in 1:M # hide\n    @printf(\"%5.1f\", A₀[g, i]) # hide\n  end # hide\n  println() # hide\nend # hide\n\nprintln(\"Initial number of infectious symptomatic I₀:\") # hide\nfor g in 1:G # hide\n  print(string(\"  \", g, \":\")) # hide\n  for i in 1:M # hide\n    @printf(\"%5.1f\", I₀[g, i]) # hide\n  end # hide\n  println() # hide\nend # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Now we apply the initialization:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"set_initial_infected!(epi_params, population, E₀, A₀, I₀)","category":"page"},{"location":"getting_started/#Containment-strategy","page":"Getting started","title":"Containment strategy","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"The containment strategy relies on the timestep at which the containment is applied, the mobility reduction, the permeablity of confined households, and the social distancing:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Timestep of application of containment\ntᶜ = 30\n\n# Mobility reduction\nκ₀ = 0.65\n\n# Permeability of confined households\nϕ = 0.174\n\n# Social distancing\nδ = 0.207\nnothing # hide","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"To apply multiple containments at different timesteps, just put them in lists:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# List of timesteps of application of containments\ntᶜs = [30, 60, 90, 120]\n\n# List of mobility reductions\nκ₀s = [0.65, 0.75, 0.65, 0.55]\n\n# List of permeabilities of confined households\nϕs = [0.174, 0.174, 0.174, 0.174]\n\n# List of social distancings\nδs = [0.207, 0.207, 0.207, 0.207]\nnothing # hide","category":"page"},{"location":"getting_started/#Running-the-model","page":"Getting started","title":"Running the model","text":"","category":"section"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Let us summarize first the preparation of the data to feed the model:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"using MMCAcovid19\n\n# Geographic and population data\npopulation = Population_Params(G, M, nᵢᵍ, kᵍ, kᵍ_h, kᵍ_w, C, pᵍ, edgelist, Rᵢⱼ, sᵢ, ξ, σ)\n\n# Epidemic parameters\nepi_params = Epidemic_Params(βᴵ, βᴬ, ηᵍ, αᵍ, μᵍ, θᵍ, γᵍ, ζᵍ, λᵍ, ωᵍ, ψᵍ, χᵍ, G, M, T)\n\n# Initialization of infectious people\nset_initial_infected!(epi_params, population, E₀, A₀, I₀)","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"With this information we can run the model:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Run the model\nrun_epidemic_spreading_mmca!(epi_params, population; verbose = true)","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"To include a containment strategy, just add the corresponding parameters:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Run the model with a single containment strategy\nrun_epidemic_spreading_mmca!(epi_params, population; tᶜ = tᶜ, κ₀ = κ₀, ϕ = ϕ, δ = δ)","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"Otherwise, if multiple containment strategies are needed:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Run the model with a single containment strategy\nrun_epidemic_spreading_mmca!(epi_params, population, tᶜs, κ₀s, ϕs, δs; verbose = false)","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"The results can be stored to files using:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Output path and suffix for results files\noutput_path = \"output/folder\"\nsuffix = \"run01\"\n\n# Store compartments\nstore_compartment(epi_params, population, \"S\", suffix, output_path)\nstore_compartment(epi_params, population, \"E\", suffix, output_path)\nstore_compartment(epi_params, population, \"A\", suffix, output_path)\nstore_compartment(epi_params, population, \"I\", suffix, output_path)\nstore_compartment(epi_params, population, \"PH\", suffix, output_path)\nstore_compartment(epi_params, population, \"PD\", suffix, output_path)\nstore_compartment(epi_params, population, \"HR\", suffix, output_path)\nstore_compartment(epi_params, population, \"HD\", suffix, output_path)\nstore_compartment(epi_params, population, \"R\", suffix, output_path)\nstore_compartment(epi_params, population, \"D\", suffix, output_path)","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"If you are interested in the evolution of the effective reproduction number R for each strata and patch, or the total one, you can calculate or store them to file:","category":"page"},{"location":"getting_started/","page":"Getting started","title":"Getting started","text":"# Optional kernel length\nτ = 21\n\n# Calculate effective reproduction number R\nRᵢᵍ_eff, R_eff = compute_R_eff(epi_params, population, τ)\n\n# Calculate and store effective reproduction number R\nstore_R_eff(epi_params, population, suffix, output_path, τ)","category":"page"},{"location":"library/#Library","page":"Library","title":"Library","text":"","category":"section"},{"location":"library/#Contents","page":"Library","title":"Contents","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"  Pages = [\"library.md\"]\n  Depth = 3","category":"page"},{"location":"library/#Index","page":"Library","title":"Index","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"","category":"page"},{"location":"library/#Types","page":"Library","title":"Types","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Modules = [MMCAcovid19]\nPrivate = false\nOrder = [:type]","category":"page"},{"location":"library/#MMCAcovid19.Epidemic_Params","page":"Library","title":"MMCAcovid19.Epidemic_Params","text":"Epidemic_Params\n\nStruct that contains the parameters related with the epidemic parameters and compartmental evolution.\n\nFields\n\nAll the parameters contained in this structure are probabilities ranged between 0 and 1.\n\nEpidemic parameters\n\nβᴵ::Array{Float64, 1}: Infectivity of infected.\nβᴬ::Array{Float64, 1}: Infectivity of asymptomatic.\nηᵍ::Array{Float64, 1}: Exposed rate for each strata.\nαᵍ::Array{Float64, 1}: Asymptomatic infectious rate for each strata.\nμᵍ::Array{Float64, 1}: Infectious rate for each strata.\nθᵍ::Array{Float64, 1}: Direct death probability for each strata.\nγᵍ::Array{Float64, 1}: ICU probability for each strata.\nζᵍ::Array{Float64, 1}: Pre-deceased rate for each strata.\nλᵍ::Array{Float64, 1}: Pre-hospitalized in ICU rate for each strata.\nωᵍ::Array{Float64, 1}: Fatality probability in ICU for each strata.\nψᵍ::Array{Float64, 1}: Death rate in iCU for each strata.\nχᵍ::Array{Float64, 1}: ICU discharge rate for each strata.\nT::Int64: Number of epidemic timesteps.\n\nCompartmental evolution\n\nρˢᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of suceptible individuals for each strata and patch.\nρᴱᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of exposed individuals for each strata and patch.\nρᴬᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of asymptomatic individuals for each strata and patch.\nρᴵᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of symptomatic individuals for each strata and patch.\nρᴾᴴᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of pre-hospitalized to ICU individuals for each strata and patch.\nρᴾᴰᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of pre-deceased individuals for each strata and patch.\nρᴴᴿᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of hospitalized in ICU patients who will recover for each strata and patch.\nρᴴᴰᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of hospitalized in ICU patients who will not recover for each strata and patch.\nρᴰᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of deceased individuals for each strata and patch.\nρᴿᵍ::Array{Float64, 3}: Matrix of size G times M times T containing infomation about the evolution of fraction of recovered individuals for each strata and patch.\n\nAuxiliary\n\nCHᵢᵍ::Array{Float64, 2}: Fraction of securely confined individuals for each strata and patch.\nQᵢᵍ::Array{Float64, 3}: Suceptible contacts available for each strata on a given patch.\n\nConstructor\n\nUse outer constructor Epidemic_Params for a proper initialization of this struct.\n\n\n\n\n\n","category":"type"},{"location":"library/#MMCAcovid19.Epidemic_Params-Tuple{Float64,Float64,Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1},Int64,Int64,Int64}","page":"Library","title":"MMCAcovid19.Epidemic_Params","text":"Epidemic_Params(βᴵ::Float64,\n                βᴬ::Float64,\n                ηᵍ::Array{Float64, 1},\n                αᵍ::Array{Float64, 1},\n                μᵍ::Array{Float64, 1},\n                θᵍ::Array{Float64, 1},\n                γᵍ::Array{Float64, 1},\n                ζᵍ::Array{Float64, 1},\n                λᵍ::Array{Float64, 1},\n                ωᵍ::Array{Float64, 1},\n                ψᵍ::Array{Float64, 1},\n                χᵍ::Array{Float64, 1},\n                G::Int64,\n                M::Int64,\n                T::Int64)\n\nConstructor of the struct Epidemic_Params.\n\nArguments\n\nβᴵ::Float64: Infectivity of infected.\nβᴬ::Float64: Infectivity of asymptomatic.\nηᵍ::Array{Float64, 1}: Vector of size G with exposed rates for each strata.\nαᵍ::Array{Float64, 1}: Vector of size G with asymptomatic infectious rates for each strata.\nμᵍ::Array{Float64, 1}: Vector of size G with infectious rates for each strata.\nθᵍ::Array{Float64, 1}: Vector of size G with direct death probabilities for each strata.\nγᵍ::Array{Float64, 1}: Vector of size G with ICU probabilities for each strata.\nζᵍ::Array{Float64, 1}: Vector of size G with pre-deceased rates for each strata.\nλᵍ::Array{Float64, 1}: Vector of size G with pre-hospitalized in ICU rates for each strata.\nωᵍ::Array{Float64, 1}: Vector of size G with fatality probabilities in ICU for each strata.\nψᵍ::Array{Float64, 1}: Vector of size G with death rates for each strata.\nχᵍ::Array{Float64, 1}: Vector of size G with ICU discharge rates for each strata.\nG::Int64: Number of strata.\nM::Int64: Number of patches.\nT::Int64: Number of epidemic timesteps.\n\nReturn\n\nStruct that contains the parameters related with the epidemic parameters and compartmental evolution.\n\n\n\n\n\n","category":"method"},{"location":"library/#MMCAcovid19.Population_Params","page":"Library","title":"MMCAcovid19.Population_Params","text":"Population_Params\n\nStruct that contains the parameters related with geographical, population and mobility data.\n\nFields\n\nG::Int64: Number of population strata.\nM::Int64: Number of patches.\nnᵢ:Array{Float64, 1}: Population of each patch.\nnᵢᵍ:Array{Float64, 2}: Population of each strata on each patch.\nnᵢ_eff:Array{Float64, 1}: Effective population on each patch after taking into account mobility.\nnᵢᵍ_eff:Array{Float64, 1}: Effective population of each strata on each patch after taking into account mobility.\nN::Int64: Total population.\nNᵍ::Array{Int64, 1}: Total population of each strata.\npᵍ::Array{Float64, 1}: Vector with the degree of mobility of each strata.\npᵍ_eff::Array{Float64, 1}: Vector with the current degree of mobility of each strata.\nedgelist::Array{Int64, 2}: Matrix with the directed edgelist between patches, where L is the number of edges.\nRᵢⱼ::Array{Float64, 1}: Vector with the transition probabilities for each edge in the edgelist.\nmobilityᵍ::Array{Float64, 1}: Effective mobility of each strata between patches (used to optimize performance).\nkᵍ::Array{Float64, 1}: Average number of contacts of each strata.\nkᵍ_h::Array{Float64, 1}: Average number of contacts at home of each strata.\nkᵍ_w::Array{Float64, 1}: Average number of contacts at work of each strata.\nkᵍ_eff::Array{Float64, 1}: Current average number of contacts of each strata.\nC::Array{Float64, 2}: Matrix with the probability of contact between different stratifications.\nzᵍ::Array{Float64, 1}: Nomalization factor each strata.\nnormᵍ::Array{Float64, 2}: Normalization of each strata (used to optimize performance).\nsᵢ::Array{Float64, 1}: Surface of each patch.\nξ::Float64: Densisty factor.\nσ::Float64: Average household size.\n\nConstructor\n\nUse outer constructor Population_Params for a proper initialization of this struct.\n\n\n\n\n\n","category":"type"},{"location":"library/#MMCAcovid19.Population_Params-Tuple{Int64,Int64,Array{Float64,2},Array{Float64,1},Array{Float64,1},Array{Float64,1},Array{Float64,2},Array{Float64,1},Array{Int64,2},Array{Float64,1},Array{Float64,1},Float64,Float64}","page":"Library","title":"MMCAcovid19.Population_Params","text":"Population_Params(G::Int64,\n                  M::Int64,\n                  nᵢᵍ::Array{Float64, 2},\n                  kᵍ::Array{Float64, 1},\n                  kᵍ_h::Array{Float64, 1},\n                  kᵍ_w::Array{Float64, 1},\n                  C::Array{Float64, 2},\n                  pᵍ::Array{Float64, 1},\n                  edgelist::Array{Int64, 2},\n                  Rᵢⱼ::Array{Float64, 1},\n                  sᵢ::Array{Float64, 1},\n                  ξ::Float64,\n                  σ::Float64)\n\nConstructor of the struct Population_Params.\n\nArguments\n\nG::Int64: Number of population strata.\nM::Int64: Number of patches.\nnᵢᵍ::Array{Float64, 2}: Matrix of size G times M with the population at each strata and patch.\nkᵍ::Array{Float64, 1}: Vector of size G with the average number of contacts of each strata.\nkᵍ_h::Array{Float64, 1}: Vector of size G with the average number of contacts at home of each strata.\nkᵍ_w::Array{Float64, 1}: Vector of size G with the average number of contacts at work of each strata.\nC::Array{Float64, 2}: Matrix of size G times G with the probability of contact between different stratifications.\npᵍ::Array{Float64, 1}: Vector of size G with the degree of mobility of each strata ranged between 0 and 1.\nedgelist::Array{Int64, 2}: Matrix of size L times 2 containing the directed edgelist between patches, where L is the number of edges. The IDs of the patches have to go from 1 to M.\nRᵢⱼ::Array{Float64, 1}: Vector of size L containing the transition probabilities for each edge in the edgelist.\nsᵢ::Array{Float64, 1}: Vector of size M with the surface of each patch.\nξ::Float64: Density factor.\nσ::Float64: Average household size.\n\nReturn\n\nStruct that contains the parameters related with geographical, population and mobility data.\n\n\n\n\n\n","category":"method"},{"location":"library/#Public","page":"Library","title":"Public","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Modules = [MMCAcovid19]\nPrivate = false\nOrder = [:function]","category":"page"},{"location":"library/#MMCAcovid19.compute_R_eff","page":"Library","title":"MMCAcovid19.compute_R_eff","text":"compute_R_eff(epi_params::Epidemic_Params,\n              population::Population_Params;\n              τ::Int64 = 21)\n\nCompute the effective reproduction number R.\n\nArguments\n\nepi_params::Epidemic_Params: Structure that contains all epidemic parameters and the epidemic spreading information.\npopulation::Population_Params: Structure that contains all the parameters related with the population.\n\nOptional\n\nτ::Int64 = 21: kernel length.\n\nReturn\n\nTuple formed by:\n\nDataFrame containing information about the evolution of the effective reproduction number R for each strata and patch.\nDataFrame containing information about the evolution of the total effective reproduction number R.\n\n\n\n\n\n","category":"function"},{"location":"library/#MMCAcovid19.reset_params!-Tuple{Epidemic_Params,Population_Params}","page":"Library","title":"MMCAcovid19.reset_params!","text":"reset_params!(epi_params::Epidemic_Params,\n              population::Population_Params)\n\nReset the epidemic and population parameters to reuse the structure and avoid additional data allocations.\n\nArguments\n\nepi_params::Epidemic_Params: Structure that contains all epidemic parameters and the epidemic spreading information.\npopulation::Population_Params: Structure that contains all the parameters related with the population.\n\n\n\n\n\n","category":"method"},{"location":"library/#MMCAcovid19.run_epidemic_spreading_mmca!-Tuple{Epidemic_Params,Population_Params,Array{Int64,1},Array{Float64,1},Array{Float64,1},Array{Float64,1}}","page":"Library","title":"MMCAcovid19.run_epidemic_spreading_mmca!","text":"run_epidemic_spreading_mmca!(epi_params::Epidemic_Params,\n                             population::Population_Params,\n                             tᶜs::Array{Int64, 1},\n                             κ₀s::Array{Float64, 1},\n                             ϕs::Array{Float64, 1},\n                             δs::Array{Float64, 1};\n                             t₀::Int64 = 1,\n                             verbose::Bool = false)\n\nComputes the evolution of the epidemic spreading over time, updating the variables stored in epi_params. It provides the option of the application of multiple different containmnets at specific dates.\n\nArguments\n\nepi_params::Epidemic_Params: Structure that contains all epidemic parameters and the epidemic spreading information.\npopulation::Population_Params: Structure that contains all the parameters related with the population.\ntᶜs::Array{Int64, 1}: List of timesteps of application of containments.\nκ⁰s::Array{Float64, 1}: List of mobility reductions.\nϕs::Array{Float64, 1}: List of permeabilities of confined households.\nδs::Array{Float64, 1}: List of social distancings.\n\nOptional\n\nt₀::Int64 = 1: Initial timestep.\nverbose::Bool = false: If true, prints useful information about the evolution of the epidemic process.\n\n\n\n\n\n","category":"method"},{"location":"library/#MMCAcovid19.run_epidemic_spreading_mmca!-Tuple{Epidemic_Params,Population_Params}","page":"Library","title":"MMCAcovid19.run_epidemic_spreading_mmca!","text":"run_epidemic_spreading_mmca!(epi_params::Epidemic_Params,\n                             population::Population_Params;\n                             tᶜ::Int64 = -1,\n                             κ₀::Float64 = 0.0,\n                             ϕ::Float64 = 1.0,\n                             δ::Float64 = 0.0,\n                             t₀::Int64 = 1,\n                             verbose::Bool = false)\n\nComputes the evolution of the epidemic spreading over time, updating the variables stored in epi_params. It also provides, through optional arguments, the application of a containmnet on a specific date.\n\nArguments\n\nepi_params::Epidemic_Params: Structure that contains all epidemic parameters and the epidemic spreading information.\npopulation::Population_Params: Structure that contains all the parameters related with the population.\n\nOptional\n\ntᶜ::Int64 = -1: Timestep of application of containment, or out of timesteps range value for no containment.\nκ⁰::Float64 = 0.0: Mobility reduction.\nϕ::Float64 = 1.0: Permeability of confined households.\nδ::Float64 = 0.0: Social Distancing.\nt₀::Int64 = 1: Initial timestep.\nverbose::Bool = false: If true, prints useful information about the evolution of the epidemic process.\n\n\n\n\n\n","category":"method"},{"location":"library/#MMCAcovid19.set_initial_infected!-Tuple{Epidemic_Params,Population_Params,Array{Float64,2},Array{Float64,2},Array{Float64,2}}","page":"Library","title":"MMCAcovid19.set_initial_infected!","text":"set_initial_infected!(epi_params::Epidemic_Params,\n                      population::Population_Params,\n                      E₀::Array{Float64, 2},\n                      A₀::Array{Float64, 2},\n                      I₀::Array{Float64, 2})\n\nSet the initial number of infected individuals on a population. They can be introduced as exposed (E), asymptomatic (A) or symptomatic (I) individuals.\n\nArguments\n\nepi_params::Epidemic_Params: Structure that contains all epidemic parameters and the epidemic spreading information.\npopulation::Population_Params: Structure that contains all the parameters related with the population.\nE₀::Array{Float64, 2}: Matrix of size G times M containing the number of exposed individuals of each strata on each patch.\nA₀::Array{Float64, 2}: Matrix of size G times M containing the number of asymptomatic infected individuals of each strata on each patch.\nI₀::Array{Float64, 2}: Matrix of size G times M containing the number of symptomatic infected individualsof each strata on each patch.\n\n\n\n\n\n","category":"method"},{"location":"library/#MMCAcovid19.store_R_eff-Tuple{Epidemic_Params,Population_Params,String,String}","page":"Library","title":"MMCAcovid19.store_R_eff","text":"store_R_eff(epi_params::Epidemic_Params,\n            population::Population_Params,\n            suffix::String,\n            folder::String;\n            τ::Int64 = 21)\n\nCompute and store the effective reproduction number R.\n\nArguments\n\nepi_params::Epidemic_Params: Structure that contains all epidemic parameters and the epidemic spreading information.\npopulation::Population_Params: Structure that contains all the parameters related with the population.\nsuffix::String: String used to identify the experiment.\nfolder::String: String containing the path where the results will be stored.\n\nOptional\n\nτ::Int64 = 21: kernel length.\n\n\n\n\n\n","category":"method"},{"location":"library/#MMCAcovid19.store_compartment-Tuple{Epidemic_Params,Population_Params,String,String,String}","page":"Library","title":"MMCAcovid19.store_compartment","text":"store_compartment(epi_params::Epidemic_Params,\n                  population::Population_Params,\n                  compartment::Char,\n                  sufix::String,\n                  folder::String)\n\nStore the evolution of the given epidemic compartment for each strata and patch.\n\nArguments\n\nepi_params::Epidemic_Params: Structure that contains all epidemic parameters and the epidemic spreading information.\npopulation::Population_Params: Structure that contains all the parameters related with the population.\ncompartment::String: String indicating the compartment, one of: \"S\", \"E\", \"A\", \"I\", \"PH\", \"PD\", \"HR\", \"HD\", \"D\", \"R\".\nsuffix::String: String used to identify the experiment.\nfolder::String: String containing the path to the folder where the results will be stored.\n\n\n\n\n\n","category":"method"},{"location":"#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The 2020 worldwide COVID-19 epidemic outbreak is probably one of the major challenges faced by humanity in our currently highly interconnected society. While a functional vaccine is developed, we must rely only on non-pharmaceutical interventions, which include mobility restrictions, confinement, social distancing, partial lockdown, or total lockdown of non-essential services. The effective evaluation of any of these policies requires a detailed enough modeling of the spreading of this epidemics.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"  Pages = [\"index.md\", \"getting_started.md\", \"library.md\"]\n  Depth = 2","category":"page"},{"location":"#Model","page":"Overview","title":"Model","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This package MMCAcovid19, written in the Julia language, implements the epidemic model for COVID-19 developed by a group of reserachers from Universitat Rovira i Virgili and Universidad de Zaragoza [1]. The model makes use of a Microscopic Markov Chain Approach (MMCA) to describe mathematically the dynamics of a so-called metapopulation model of epidemic spreading [2-4].","category":"page"},{"location":"#Description","page":"Overview","title":"Description","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The main ingredients of the model are the following:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"The area to analyze is divided in patches, e.g., municipalities, counties, regions, or any other desired level of resolution.\nThe surface of each patch, to account for density.\nThe stratification of the population in groups with different mobility, contacts, or epidemic parameters, e.g., stratification by age.\nThe stratified population at each patch.\nThe stratified daily mobility (commuting) between patches.\nThe stratified average number of contacts.\nThe contacts distribution between strata.\nThe epidemic parameters.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"As is common practice in the description of epidemic spreading, we have considered a set of compartments to describe the different stages of people in front of the disease, selected according to the current knowledge of COVID-19 (see [1] for the details):","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Susceptible (S): healthy individual.\nExposed (E): incubating the disease, not infectious.\nInfected asymptomatic (A): infectious, without symptomes of the disease.\nInfected symptomatic (I): infectious, with symptomes of the disease.\nPre-hospitalized to ICU (PH)\nPre-deceased (PD)\nHospitalized in ICU patients who will recover (HR)\nHospitalized in ICU patients who will not recover (HD)\nDeceased (D).\nRecovered (R).","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"The transitions between compartments, including their corresponding epidemic parameters, are:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"(Image: Model)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Once all the information about population and epidemic parameters is introduced, the model is capable of predicting the evolution of the disease at the level of patch and for each of the epidemic compartments. Since MMCA is a discrete time formalism, we have selected a time resolution of a day, the natural one to account for contacts, mobility and epidemic rates.","category":"page"},{"location":"#Containment","page":"Overview","title":"Containment","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The model is able to include containment measures:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Mobility reduction.\nPermeability of confined households.\nSocial distancing.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"This package allows the application of multiple containment measures at different dates, thus enabling the analysis of elaborated containment policies.","category":"page"},{"location":"#References","page":"Overview","title":"References","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Alex Arenas, Wesley Cota, Jesús Gómez-Gardeñes, Sergio Gómez, Clara Granell, Joan T. Matamalas, David Soriano-Paños and Benjamin Steinegger: Modeling the spatiotemporal epidemic spreading of COVID-19 and the impact of mobility and social distancing interventions, Physical Review X 10 (2020) 041055 (doi)\nSergio Gómez, Alex Arenas, Javier Borge-Holthoefer, Sandro Meloni and Yamir Moreno: Discrete-time Markov chain approach to contact-based disease spreading in complex networks, Europhysics Letters 89 (2010) 38009 (doi)\nJesús Gómez-Gardeñes, David Soriano-Paños and Alex Arenas: Critical regimes driven by recurrent mobility patterns of reaction-diffusion processes in networks, Nature Physics 14 (2018) 391–395 (doi)\nDavid Soriano-Paños, L. Lotero, Alex Arenas and Jesús Gómez-Gardeñes: Spreading processes in multiplex metapopulations containing different mobility networks, Physical Review X 8 (2018) 031039 (doi)","category":"page"},{"location":"#Authors","page":"Overview","title":"Authors","text":"","category":"section"},{"location":"#Coordinators","page":"Overview","title":"Coordinators","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Alex Arenas (Universitat Rovira i Virgili, Tarragona, Spain)\nJesús Gómez-Gardeñes (Universidad de Zaragoza, Zaragoza, Spain)","category":"page"},{"location":"#Researchers","page":"Overview","title":"Researchers","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Wesley Cota (Universidade Federal de Viçosa, Minas Gerais, Brazil)\nSergio Gómez (Universitat Rovira i Virgili, Tarragona, Spain)\nClara Granell (Universidad de Zaragoza, Zaragoza, Spain)\nJoan T. Matamalas (Harvard Medical School, Boston, USA)\nDavid Soriano-Paños (Universidad de Zaragoza, Zaragoza, Spain)\nBenjamin Steinegger (Universitat Rovira i Virgili, Tarragona, Spain)","category":"page"},{"location":"#Index","page":"Overview","title":"Index","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"","category":"page"}]
}
